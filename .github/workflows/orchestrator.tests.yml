name: Run Kube Test Console Application

on: [push]

jobs:  
#  test-inventory:
#    needs: [test-add]
#    runs-on: windows-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Setup dotnet
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: '3.1.x'
#
#      - name: Run Inventory test console
#        run: |
#          cd TestConsole
#          echo "Running test console hard-coded to Debug/netcoreapp3.1"
#          bin\Debug\netcoreapp3.1\TestConsole.exe
#          echo "Running *TestConsole.exe in Debug folder"
#          $testConsolePath = (Get-ChildItem -Include bin/Debug/*TestConsole.exe -File -Recurse).fullname
#          echo "Test Console Path: ${testConsolePath}"
#          $testConsolePath
#        env:
#          TEST_MANUAL: false
#          TEST_CERT_MGMT_TYPE: inv
#          TEST_ORCH_OPERATION: inv
#          KEYFACTOR_HOSTNAME: ${{ env.KEYFACTOR_HOSTNAME }}
#          KEYFACTOR_DOMAIN: ${{ env.KEYFACTOR_DOMAIN }}
#          KEYFACTOR_USERNAME: ${{ env.KEYFACTOR_USERNAME }}
#          TEST_KUBE_NAMESPACE: ${{ env.TEST_KUBE_NAMESPACE }}

  TestConsoleTests:
    needs: [ ]
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
          
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
          
      - name: Setup build environment
        run: |
          $slnPath = (Get-ChildItem -Include *.sln -File -Recurse).fullname
          dotnet nuget add source https://nuget.pkg.github.com/Keyfactor/index.json -n github -u ${{ github.actor }} -p ${{ secrets.PRIVATE_PACKAGE_ACCESS }} --store-password-in-clear-text
          nuget restore $slnPath
          
      - name: Execute MSBuild Commands
        run: |
          $newVer = "${{ inputs.release_version || '1.0.0' }}".TrimStart('v').Split('-')[0]
          MSBuild.exe $Env:SOLUTION_PATH -p:RestorePackagesConfig=false -p:Configuration=Debug -p:Version=$newVer
      
      - name: Test Console - Run Management ADD Operation
        run: |
          cd TestConsole
          echo "Running test console hard-coded to Debug/netcoreapp3.1"
          Invoke-expression -command ".\bin\Debug\netcoreapp3.1\TestConsole.exe"
        env:
          TEST_MANUAL: false
          TEST_CERT_MGMT_TYPE: add
          TEST_ORCH_OPERATION: man
          KEYFACTOR_HOSTNAME: ${{ vars.KEYFACTOR_HOSTNAME }}
          KEYFACTOR_DOMAIN: ${{ vars.KEYFACTOR_DOMAIN }}
          KEYFACTOR_USERNAME: ${{ vars.KEYFACTOR_USERNAME }}
          TEST_KUBE_NAMESPACE: ${{ vars.TEST_KUBE_NAMESPACE }}
          TEST_PAM_MOCK_USERNAME: "kubeconfig"
          KEYFACTOR_PASSWORD: ${{ secrets.KEYFACTOR_PASSWORD }}
          TEST_PAM_MOCK_PASSWORD: ${{ secrets.TEST_KUBECONFIG }}
      
      - name: Test Console - Run INV Operation - Check ADD
        run: |
          cd TestConsole
          echo "Running test console hard-coded to Debug/netcoreapp3.1"
          Invoke-expression -command ".\bin\Debug\netcoreapp3.1\TestConsole.exe"
        env:
          TEST_MANUAL: false
          TEST_CERT_MGMT_TYPE: inv
          TEST_ORCH_OPERATION: inv
          KEYFACTOR_HOSTNAME: ${{ vars.KEYFACTOR_HOSTNAME }}
          KEYFACTOR_DOMAIN: ${{ vars.KEYFACTOR_DOMAIN }}
          KEYFACTOR_USERNAME: ${{ vars.KEYFACTOR_USERNAME }}
          TEST_KUBE_NAMESPACE: ${{ vars.TEST_KUBE_NAMESPACE }}
          TEST_PAM_MOCK_USERNAME: "kubeconfig"
          KEYFACTOR_PASSWORD: ${{ secrets.KEYFACTOR_PASSWORD }}
          TEST_PAM_MOCK_PASSWORD: ${{ secrets.TEST_KUBECONFIG }}
      
      - name: Test Console - Run Management REM Operation
        run: |
          cd TestConsole
          echo "Running test console hard-coded to Debug/netcoreapp3.1"
          echo "Running TestConsole.exe in Debug folder"
          Invoke-expression -command ".\bin\Debug\netcoreapp3.1\TestConsole.exe"
        env:
          TEST_MANUAL: false
          TEST_CERT_MGMT_TYPE: rem
          TEST_ORCH_OPERATION: man
          KEYFACTOR_HOSTNAME: ${{ vars.KEYFACTOR_HOSTNAME }}
          KEYFACTOR_DOMAIN: ${{ vars.KEYFACTOR_DOMAIN }}
          KEYFACTOR_USERNAME: ${{ vars.KEYFACTOR_USERNAME }}
          TEST_KUBE_NAMESPACE: ${{ vars.TEST_KUBE_NAMESPACE }}
          TEST_PAM_MOCK_USERNAME: "kubeconfig"
          KEYFACTOR_PASSWORD: ${{ secrets.KEYFACTOR_PASSWORD }}
          TEST_PAM_MOCK_PASSWORD: ${{ secrets.TEST_KUBECONFIG }}

      - name: Test Console - Run INV Operation - Check REM
        run: |
          cd TestConsole
          echo "Running test console hard-coded to Debug/netcoreapp3.1"
          Start-Process -FilePath "bin\Debug\netcoreapp3.1\TestConsole.exe" -Wait
          Invoke-expression -command ".\bin\Debug\netcoreapp3.1\TestConsole.exe"
        env:
          TEST_MANUAL: false
          TEST_CERT_MGMT_TYPE: inv
          TEST_ORCH_OPERATION: inv
          KEYFACTOR_HOSTNAME: ${{ vars.KEYFACTOR_HOSTNAME }}
          KEYFACTOR_DOMAIN: ${{ vars.KEYFACTOR_DOMAIN }}
          KEYFACTOR_USERNAME: ${{ vars.KEYFACTOR_USERNAME }}
          TEST_KUBE_NAMESPACE: ${{ vars.TEST_KUBE_NAMESPACE }}
          TEST_PAM_MOCK_USERNAME: "kubeconfig"
          KEYFACTOR_PASSWORD: ${{ secrets.KEYFACTOR_PASSWORD }}
          TEST_PAM_MOCK_PASSWORD: ${{ secrets.TEST_KUBECONFIG }}